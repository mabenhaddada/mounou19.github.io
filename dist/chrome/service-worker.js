self.importScripts("https://unpkg.com/idb-keyval@2.3.0/dist/idb-keyval-min.js");const CURRENT_CACHES={prefetch:"prefetch-v-29d315a",runtime:"runtime-v-29d315a"};async function prefetch(e,t){try{const a=await caches.open(e);for(const e in t){const c=t[e],n=await fetch(new Request(new URL(c,location.href)));if(n.status>=400)throw new Error(`request for ${c} failed with status ${n.statusText}`);await a.put(c,n)}}catch(e){console.error(`Unable to cache ${t}.`)}}async function purgeCaches(){const e=Object.keys(CURRENT_CACHES).map(e=>CURRENT_CACHES[e]),t=await caches.keys();for(const a in t){const c=t[a];e.includes(c)||(console.log(`Deleting out of date cache: ${c}`),await caches.delete(c))}}async function cacheFetch(e){const t=await caches.match(e);return t?(console.log(`cacheFetch url:${e} – IS cached, delvering.`),t):null}async function networkFetch(e,{cacheName:t=CURRENT_CACHES.runtime,overrideCacheName:a=null,cacheable:c=!0}){const n=e.request.clone(),i=await fetch(n);if(i.ok&&c){(await caches.open(t)).put(a||e.request,i.clone())}return i}async function cacheFirstFetch(e,{cacheName:t=CURRENT_CACHES.runtime,overrideCacheName:a=null,cacheable:c=!0}){const n=await cacheFetch(a||e.request.url);return null!==n?(console.log(`cacheFirstFetch url: ${e.request.url}, overrideCacheName: ${a} – IS cached, delivering.`),n):(console.log(`cacheFirstFetch url: ${e.request.url}, overrideCacheName: ${a} – NOT cached, network request.`),await networkFetch(e,{cacheName:t,overrideCacheName:a,cacheable:c}))}async function networkFirstFetch(e,{cacheName:t=CURRENT_CACHES.runtime,overrideCacheName:a=null,cacheable:c=!0}){const n=await networkFetch(e,{cacheName:t,overrideCacheName:a,cacheable:c});if(n.ok)return n;const i=await cacheFetch(url);return null!==i?i:response}self.addEventListener("install",e=>{console.log('Install, prefetch: ["/dist/chrome/bundle.AboutHome.2d8268d439d9ebc8f9c4.js","/dist/chrome/bundle.ItemHome.0244786ed9f036fde9d4.js","/dist/chrome/bundle.UserHome.89652ba93b207b2815a7.js","/dist/chrome/bundle.application.03fdf78d35cb06165282.js","/shell"]'),self.skipWaiting(),e.waitUntil(async function(){prefetch(CURRENT_CACHES.prefetch,["/dist/chrome/bundle.AboutHome.2d8268d439d9ebc8f9c4.js","/dist/chrome/bundle.ItemHome.0244786ed9f036fde9d4.js","/dist/chrome/bundle.UserHome.89652ba93b207b2815a7.js","/dist/chrome/bundle.application.03fdf78d35cb06165282.js","/shell"])}())}),self.addEventListener("activate",e=>{e.waitUntil(async function(){await clients.claim(),await purgeCaches()}())}),self.addEventListener("fetch",e=>{console.log(`Fetch event for ${e.request.url}`),e.respondWith(async function(){try{const{mode:t,url:a}=e.request;return"navigate"===t?await cacheFirstFetch(e,{cacheName:CURRENT_CACHES.prefetch,overrideCacheName:"/shell"}):/\/dist\/chrome/.test(a)?await cacheFirstFetch(e,{cacheName:CURRENT_CACHES.prefetch}):/\/api\/list/.test(a)?await cacheFirstFetch(e,{cacheName:CURRENT_CACHES.runtime}):(/\/api\/details/.test(a)&&await networkFirstFetch(e,{cacheName:CURRENT_CACHES.runtime}),await networkFetch(e,{cacheName:CURRENT_CACHES.runtime}))}catch(e){throw console.error(`Fetching failed: ${e}`),e}}())}),self.addEventListener("message",e=>{e.waitUntil(async function(){switch(console.log(`Handling message event: ${e.data.command}`),e.data.command){case"uuid-update":if(await idbKeyval.get("uuid")!==e.data.uuid){await idbKeyval.set("uuid",e.data.uuid);const t=await caches.open(CURRENT_CACHES.runtime),a=await t.keys();for(const c in a){const n=a[c],i=new URL(n.url);/\/api\/list/.test(i.pathname)&&i.searchParams.get("uuid")!==e.data.uuid&&await t.delete(n)}return await purgeCaches(),void await prefetch(CURRENT_CACHES.runtime,[`/api/list/top?uuid=${e.data.uuid}&from=0&to=29`])}return;default:throw Error(`Unknown command: ${e.data.command}`)}}())});